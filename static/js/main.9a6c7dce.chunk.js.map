{"version":3,"sources":["components/Header/Header.jsx","components/EmployeeList/EmployeeList.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","EmployeeList","state","employees","filteredEmployees","search","getEmployees","axios","get","then","response","console","log","data","results","setState","handleInputChange","event","target","name","value","filterEmployees","filter","employee","location","city","includes","handleSortDownName","sortedReverse","sort","a","b","first","handleSortUpName","this","type","onChange","placeholder","scope","onClick","map","src","picture","medium","alt","last","cell","email","login","uuid","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a6c7dce.chunk.js","sourcesContent":["import React from 'react';\nimport \"./header.css\"\nconst Header = () => {\n    return (\n        <div className=\"header text-center\">\n            <h1>Employee Directory</h1>\n            <p>Sort by First Name or Search by City!</p>\n        </div>\n    );\n};\n\nexport default Header;","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { unstable_renderSubtreeIntoContainer } from \"react-dom\";\n\nclass EmployeeList extends Component {\n  state = {\n    employees: [],\n    filteredEmployees: [],\n    search: \"\",\n  };\n\n//When component successfully mounts runs axios call\n  componentDidMount() {\n    this.getEmployees();\n  }\n\n//   API CALL\n  getEmployees = () => {\n    axios.get(\"https://randomuser.me/api/?results=125\").then((response) => {\n      console.log(response.data.results);\n      this.setState({\n        employees: response.data.results,\n        filteredEmployees: response.data.results,\n      });\n    });\n  };\n\n//   Filters Search Bar on Change\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    const filterEmployees = this.state.employees.filter((employee) => {\n        return employee.location.city.includes(value);\n    })\n    this.setState({\n      [name]: value,\n      filteredEmployees: filterEmployees,\n    });\n  };\n//   Sorts Descending Order\n  handleSortDownName = () => {\n      const sortedReverse = this.state.filteredEmployees.sort((a,b) => {\n          return a.name.first > b.name.first ? -1 : 1;\n      });\n      this.setState({\n          filteredEmployees: sortedReverse\n      });\n  }\n//Sorts Ascending Order\n  handleSortUpName = () => {\n    const sortedReverse = this.state.filteredEmployees.sort((a,b) => {\n        return a.name.first > b.name.first ? 1 : -1;\n    });\n    this.setState({\n        filteredEmployees: sortedReverse\n    });\n}\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-4 text-center\"></div>\n            <div className=\"col-md-4 text-center\">\n              <input\n                className=\"form-control py-3 my-4\"\n                type=\"text\"\n                name=\"search\"\n                onChange={this.handleInputChange}\n                value={this.state.search}\n                placeholder=\"Search by City\"\n              />\n            </div>\n            <div className=\"col-md-4 text-center\"></div>\n          </div>\n          <div className=\"col-md-12\">\n            <table className=\"table table-success table-striped\">\n              <thead className=\"text-center\">\n                <tr>\n                  <th scope=\"col\">Picture</th>\n                  <th scope=\"col\">\n                    <span>\n                      <button onClick={this.handleSortUpName}>\n                        <i className=\"fas fa-angle-double-up\"></i>\n                      </button>\n                      <span>Name</span>\n                      <button onClick={this.handleSortDownName}>\n                        <i className=\"fas fa-angle-double-down\"></i>\n                      </button>\n                    </span>\n                  </th>\n                  <th scope=\"col\">Phone</th>\n                  <th scope=\"col\">Email</th>\n                  <th scope=\"col\">City</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.filteredEmployees.map((results) => {\n                  return (\n                    <tr key={results.login.uuid}>\n                      <th\n                        scope=\"row\"\n                        className=\"text-center\"\n                      >\n                        <img src={results.picture.medium} alt=\"\" />\n                      </th>\n                      <td className=\"text-center\">\n                        {results.name.first} {results.name.last}\n                      </td>\n                      <td className=\"text-center\">{results.cell}</td>\n                      <td className=\"text-center\">{results.email}</td>\n                      <td className=\"text-center\">{results.location.city}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EmployeeList;\n","import React from 'react';\nimport Header from \"./components/Header/Header\"\nimport EmployeeList from \"./components/EmployeeList/EmployeeList\"\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <EmployeeList />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}