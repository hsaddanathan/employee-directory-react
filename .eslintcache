[{"/Users/harsha/gt-pt/homework/employee-directory/src/index.js":"1","/Users/harsha/gt-pt/homework/employee-directory/src/reportWebVitals.js":"2","/Users/harsha/gt-pt/homework/employee-directory/src/App.js":"3","/Users/harsha/gt-pt/homework/employee-directory/src/components/Header/Header.jsx":"4","/Users/harsha/gt-pt/homework/employee-directory/src/components/EmployeeList/EmployeeList.jsx":"5"},{"size":478,"mtime":1612119394049,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1611442794997,"results":"8","hashOfConfig":"7"},{"size":262,"mtime":1612120392490,"results":"9","hashOfConfig":"7"},{"size":275,"mtime":1612132316701,"results":"10","hashOfConfig":"7"},{"size":3957,"mtime":1612133149583,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1n1atqh",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/harsha/gt-pt/homework/employee-directory/src/index.js",[],["24","25"],"/Users/harsha/gt-pt/homework/employee-directory/src/reportWebVitals.js",[],"/Users/harsha/gt-pt/homework/employee-directory/src/App.js",[],"/Users/harsha/gt-pt/homework/employee-directory/src/components/Header/Header.jsx",[],"/Users/harsha/gt-pt/homework/employee-directory/src/components/EmployeeList/EmployeeList.jsx",["26"],"import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { unstable_renderSubtreeIntoContainer } from \"react-dom\";\n\nclass EmployeeList extends Component {\n  state = {\n    employees: [],\n    filteredEmployees: [],\n    search: \"\",\n  };\n\n//When component successfully mounts runs axios call\n  componentDidMount() {\n    this.getEmployees();\n  }\n\n//   API CALL\n  getEmployees = () => {\n    axios.get(\"https://randomuser.me/api/?results=125\").then((response) => {\n      console.log(response.data.results);\n      this.setState({\n        employees: response.data.results,\n        filteredEmployees: response.data.results,\n      });\n    });\n  };\n\n//   Filters Search Bar on Change\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    const filterEmployees = this.state.employees.filter((employee) => {\n        return employee.location.city.includes(value);\n    })\n    this.setState({\n      [name]: value,\n      filteredEmployees: filterEmployees,\n    });\n  };\n//   Sorts Descending Order\n  handleSortDownName = () => {\n      const sortedReverse = this.state.filteredEmployees.sort((a,b) => {\n          return a.name.first > b.name.first ? -1 : 1;\n      });\n      this.setState({\n          filteredEmployees: sortedReverse\n      });\n  }\n//Sorts Ascending Order\n  handleSortUpName = () => {\n    const sortedReverse = this.state.filteredEmployees.sort((a,b) => {\n        return a.name.first > b.name.first ? 1 : -1;\n    });\n    this.setState({\n        filteredEmployees: sortedReverse\n    });\n}\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-4 text-center\"></div>\n            <div className=\"col-md-4 text-center\">\n              <input\n                className=\"form-control py-3 my-4\"\n                type=\"text\"\n                name=\"search\"\n                onChange={this.handleInputChange}\n                value={this.state.search}\n                placeholder=\"Search by City\"\n              />\n            </div>\n            <div className=\"col-md-4 text-center\"></div>\n          </div>\n          <div className=\"col-md-12\">\n            <table className=\"table table-success table-striped\">\n              <thead className=\"text-center\">\n                <tr>\n                  <th scope=\"col\">Picture</th>\n                  <th scope=\"col\">\n                    <span>\n                      <button onClick={this.handleSortUpName}>\n                        <i className=\"fas fa-angle-double-up\"></i>\n                      </button>\n                      <span>Name</span>\n                      <button onClick={this.handleSortDownName}>\n                        <i className=\"fas fa-angle-double-down\"></i>\n                      </button>\n                    </span>\n                  </th>\n                  <th scope=\"col\">Phone</th>\n                  <th scope=\"col\">Email</th>\n                  <th scope=\"col\">City</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.filteredEmployees.map((results) => {\n                  return (\n                    <tr key={results.login.uuid}>\n                      <th\n                        scope=\"row\"\n                        className=\"text-center\"\n                      >\n                        <img src={results.picture.medium} alt=\"\" />\n                      </th>\n                      <td className=\"text-center\">\n                        {results.name.first} {results.name.last}\n                      </td>\n                      <td className=\"text-center\">{results.cell}</td>\n                      <td className=\"text-center\">{results.email}</td>\n                      <td className=\"text-center\">{results.location.city}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EmployeeList;\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":3,"column":10,"nodeType":"33","messageId":"34","endLine":3,"endColumn":45},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'unstable_renderSubtreeIntoContainer' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]